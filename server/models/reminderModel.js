const mongoose = require('mongoose');

const reminderSchema = new mongoose.Schema({
  userId: { 
    type: mongoose.SchemaTypes.ObjectId, 
    ref: 'User', 
    required: true,
    index: true
  },
  appointmentId: { 
    type: mongoose.SchemaTypes.ObjectId, 
    ref: 'Appointment', 
    required: true,
    index: true
  },
  remindAt: { 
    type: Date, 
    required: true,
    index: true
  },
  sent: { 
    type: Boolean, 
    default: false,
    index: true
  },
  sentAt: {
    type: Date
  },
  method: { 
    type: String, 
    enum: ['email', 'sms', 'push', 'notification'], 
    default: 'email',
    index: true
  },
  message: { 
    type: String, 
    required: true,
    maxLength: 500
  },
  autoGenerated: {
    type: Boolean,
    default: false
  },
  attempts: {
    type: Number,
    default: 0
  },
  lastAttempt: {
    type: Date
  },
  failureReason: {
    type: String
  }
}, { 
  timestamps: true,
  toJSON: { virtuals: true },
  toObject: { virtuals: true }
});

// Compound indexes for efficient queries
reminderSchema.index({ remindAt: 1, sent: 1 });
reminderSchema.index({ userId: 1, sent: 1 });
reminderSchema.index({ appointmentId: 1, method: 1 });

// Virtual for overdue status
reminderSchema.virtual('isOverdue').get(function() {
  return !this.sent && this.remindAt < new Date();
});

module.exports = mongoose.model('Reminder', reminderSchema);
