version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: doctor_appointment_db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: doctor_appointment
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - doctor_appointment_network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: doctor_appointment_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - doctor_appointment_network

  # Application
  app:
    build: .
    container_name: doctor_appointment_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://admin:password123@mongodb:27017/doctor_appointment?authSource=admin
      JWT_SECRET: your_production_jwt_secret_here
      CLIENT_URL: http://localhost:3000
      PORT: 5015
      LOG_LEVEL: info
    ports:
      - "5015:5015"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - doctor_appointment_network
    healthcheck:
      test: ["CMD", "node", "server/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: doctor_appointment_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - doctor_appointment_network

volumes:
  mongodb_data:
  redis_data:

networks:
  doctor_appointment_network:
    driver: bridge
